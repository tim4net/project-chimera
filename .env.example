GEMINI_API_KEY=your_gemini_api_key_here

# Backend server port
PORT=3001

# Supabase credentials (Get these from your Supabase project dashboard)
SUPABASE_URL=https://your-project-ref.supabase.co
SUPABASE_ANON_KEY=your_supabase_anon_key_here
SUPABASE_SERVICE_KEY=your_supabase_service_role_key_here

# Database connection string (for direct Postgres access if needed)
DATABASE_URL="postgresql://postgres:your_password@db.your-project-ref.supabase.co:5432/postgres"

# Image Generation Models Configuration
# Defines the priority order for image generation models.
# Options: LOCAL, GOOGLE_FREE, GOOGLE_PAID
# Example: "LOCAL,GOOGLE_FREE,GOOGLE_PAID" will try local first, then free Google, then paid Google.
IMAGE_GENERATION_PRIORITY="LOCAL,GOOGLE_FREE,GOOGLE_PAID"

# --- Local Image Model (gemme-3-4b) ---
# Name of your local image generation model.
LOCAL_IMAGE_MODEL_NAME="gemme-3-4b"
# Endpoint for your local LLM, assuming it's compatible with image generation.
LOCAL_IMAGE_MODEL_ENDPOINT="http://localhost:1234/v1"

# --- Google Free/Trial Image Model (via Gemini API / Google AI Studio) ---
# API Key for accessing Google's Gemini API for image generation.
# This might be the same as your GEMINI_API_KEY if it supports image generation.
GOOGLE_IMAGE_MODEL_FREE_API_KEY="${GEMINI_API_KEY}"
# Endpoint for a free-tier or experimental Google image generation model (e.g., Gemini Pro Vision).
GOOGLE_IMAGE_MODEL_FREE_ENDPOINT="https://generativelanguage.googleapis.com/v1beta/models/gemini-pro-vision:generateContent"

# --- Google Paid Image Model (via Gemini API / Vertex AI) ---
# API Key for accessing Google's more advanced/paid image generation models.
# Could be the same as the free key, or a dedicated one if you have different access levels.
GOOGLE_IMAGE_MODEL_PAID_API_KEY="${GEMINI_API_KEY}"
# Endpoint for a paid Google image generation model (e.g., Imagen or other advanced Gemini models).
GOOGLE_IMAGE_MODEL_PAID_ENDPOINT="https://generativelanguage.googleapis.com/v1beta/models/imagen:generateContent"