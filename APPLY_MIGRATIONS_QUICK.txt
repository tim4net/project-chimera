╔══════════════════════════════════════════════════════════════════════════════╗
║              TRAVEL SYSTEM MIGRATIONS - QUICK APPLICATION GUIDE              ║
╚══════════════════════════════════════════════════════════════════════════════╝

STATUS: ✅ READY FOR APPLICATION
DATE: 2025-10-22

┌──────────────────────────────────────────────────────────────────────────────┐
│ FASTEST METHOD (1 MINUTE)                                                    │
└──────────────────────────────────────────────────────────────────────────────┘

1. Go to: https://supabase.com/dashboard/project/muhlitkerrjparpcuwmc/sql/new

2. Copy file contents:
   cat /srv/project-chimera/TRAVEL_MIGRATIONS_COMBINED.sql

3. Paste into SQL Editor and click "Run"

4. Done! ✅

┌──────────────────────────────────────────────────────────────────────────────┐
│ WHAT GETS CREATED                                                            │
└──────────────────────────────────────────────────────────────────────────────┘

✓ world_pois.danger_level column (INT 1-5)
✓ travel_sessions table (11 columns, 4 indexes)
✓ travel_events table (10 columns, 5 indexes)
✓ 4 foreign key constraints
✓ 1 auto-update trigger
✓ Multiple CHECK constraints

┌──────────────────────────────────────────────────────────────────────────────┐
│ VERIFICATION (Run in SQL Editor)                                             │
└──────────────────────────────────────────────────────────────────────────────┘

-- Quick check (should return 3)
SELECT COUNT(*)
FROM information_schema.tables
WHERE table_name IN ('travel_sessions', 'travel_events')
UNION ALL
SELECT COUNT(*)
FROM information_schema.columns
WHERE table_name = 'world_pois' AND column_name = 'danger_level';

-- Should return: 3 rows with count = 1 each

┌──────────────────────────────────────────────────────────────────────────────┐
│ AFTER MIGRATION                                                              │
└──────────────────────────────────────────────────────────────────────────────┘

1. Restart backend:
   podman compose restart backend

2. Check logs:
   podman compose logs -f backend | grep -i travel

3. Test integration:
   See /srv/project-chimera/TRAVEL_E2E_TEST_GUIDE.md

┌──────────────────────────────────────────────────────────────────────────────┐
│ FILES CREATED                                                                │
└──────────────────────────────────────────────────────────────────────────────┘

MIGRATIONS (backend/migrations/):
  ✓ 20251022_add_danger_level_to_biomes.sql
  ✓ 20251022_create_travel_sessions.sql
  ✓ 20251022_create_travel_events.sql

COMBINED:
  ✓ TRAVEL_MIGRATIONS_COMBINED.sql (146 lines, 6.5 KB)

DOCS:
  ✓ APPLY_TRAVEL_MIGRATIONS.md (detailed guide)
  ✓ TRAVEL_MIGRATIONS_README.md (technical docs)
  ✓ DATABASE_MIGRATION_COMPLETE.md (full report)

SCRIPTS:
  ✓ apply_travel_migrations.js (pg pool)
  ✓ apply_travel_migrations_rest.js (REST API)

┌──────────────────────────────────────────────────────────────────────────────┐
│ TROUBLESHOOTING                                                              │
└──────────────────────────────────────────────────────────────────────────────┘

ERROR: "already exists"
→ Safe to ignore, migration already applied

ERROR: "relation does not exist"
→ Apply earlier migrations first (world_pois, characters tables)

ERROR: Foreign key violations
→ Ensure referenced tables (characters, world_pois) exist

Need to rollback?
→ See DATABASE_MIGRATION_COMPLETE.md, section "SUPPORT & TROUBLESHOOTING"

┌──────────────────────────────────────────────────────────────────────────────┐
│ SUPPORT                                                                      │
└──────────────────────────────────────────────────────────────────────────────┘

Full documentation: /srv/project-chimera/DATABASE_MIGRATION_COMPLETE.md
Quick start: /srv/project-chimera/APPLY_TRAVEL_MIGRATIONS.md
Technical details: /srv/project-chimera/TRAVEL_MIGRATIONS_README.md

Supabase Dashboard: https://supabase.com/dashboard/project/muhlitkerrjparpcuwmc

╔══════════════════════════════════════════════════════════════════════════════╗
║                            END OF QUICK GUIDE                                ║
╚══════════════════════════════════════════════════════════════════════════════╝
